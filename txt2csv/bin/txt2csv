#!/usr/bin/env ruby
# this first line is how the operating system knows to use ruby to execute this file
# use chmod oug+x txt2csv to make sure the file is executable
require 'thor'

class Txt2csv < Thor
  class_option :i, aliases: ['--input']
  class_option :o, aliases: ['--output']
  class_option :s, aliases: ['--suffix']
  class_option :p, aliases: ['--prefix']

  desc "analyze", "analyze customer data and output names histogram"
  def analyze
    if options[:p]
      regex = /^\S*/
    elsif options[:s]
      regex = /\S*$/
    else
       puts "You're broken"
    end
    histogram = Hash.new(0)
    File.open(options[:i]).each_line do |line|
      line_array = line.split("\t")
      name = line_array.shift
      matched_name = regex.match(name).to_s
      histogram[matched_name.to_sym] += 1
    end
    histogram.sort_by {|k, v| v}.reverse!
    output_file = File.new(options[:o], "w+")
    output_file.puts(histogram.each {|key, value| puts "#{key} #{value}"})
  end
  # Get the input filename from the command line interface, and open the file for reading
# Get the prefix and suffix histogram files from the command line interface and open them.
# Read the histogram files to create prefix and suffix words arrays. 
# 
# Get the output filename from the command line interface and open a CSV file for writing
# Write the column headers to the file
# For each line in the incoming file,
#   Split the line on tabs,
#   Hand each field to the appropriate method. Use the word arrays for the name parser.
#   collect the arrays returned from the methods
#   output the concatenated arrays as a string to the CSV file
# Close all open files
  def convert

  end
end
Txt2csv.start